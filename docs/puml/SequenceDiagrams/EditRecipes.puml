@startuml
!include Style.puml

hide footbox
skinparam guillemet false
skinparam sequenceReferenceBackgroundColor COLOR_YELLOW
skinparam sequenceReferenceHeaderBackgroundColor COLOR_RED
skinparam ParticipantBackGroundColor COLOR_LIGHTBLUE
skinparam {
    SequenceGroupBackgroundColor COLOR_LIGHTRED
}

box Editing Recipes COLOR_PALE_PINK
participant "YMFC" as YMFC <<class>>
participant "Parser" as Parser <<class>>
participant "command:EditCommand" as EditCommand
participant "recipeList:RecipeList" as RecipeList
participant "storage:Storage" as Storage
participant "ui:Ui" as Ui
end box

YMFC -> Parser : parseCommand(...)
activate Parser

Parser -> Parser : getEditCommand(args)
activate Parser

create EditCommand
Parser -> EditCommand : EditCommand(...)
activate EditCommand
EditCommand --> Parser
deactivate EditCommand


Parser --> Parser : command:EditCommand
deactivate Parser
Parser --> YMFC : command:EditCommand
deactivate Parser

YMFC -> EditCommand : execute(...)
activate EditCommand

EditCommand -> RecipeList : getIndexByName(...)
activate RecipeList
ref over RecipeList
    Find the recipe that the user wants to edit
    Return the index of that recipe
end ref
RecipeList --> EditCommand : toEditRecipeIndex:int
deactivate RecipeList

EditCommand -> EditCommand : craftEditedRecipe(toEditRecipeIndex:int)
activate EditCommand
ref over EditCommand
    Create a modified recipe based on
    user argument inputted previously
    and the recipe that the user is referencing
    to be edited
end ref
EditCommand --> EditCommand : EditedRecipe:Recipe
deactivate EditCommand

EditCommand -> RecipeList : updateRecipe(toEditRecipeIndex:int, EditedRecipe:Recipe)
activate RecipeList
ref over RecipeList
    Update the modified recipe
    to the user list of recipes
end ref
RecipeList --> EditCommand :
deactivate RecipeList

EditCommand -> Storage : saveRecipes(:RecipeList)
activate Storage
ref over Storage
    Saves recipes in
    RecipeList into
    .txt file
end ref
Storage --> EditCommand
deactivate Storage

EditCommand -> Ui : printEditedRecipe(originalName:String, editedRecipe:Recipes)
activate Ui
ref over Ui
    Print to the CLI
    that a recipe
    has been edited
end ref
Ui --> EditCommand
deactivate Ui



EditCommand --> YMFC

deactivate EditCommand
EditCommand -[hidden]-> YMFC

destroy EditCommand


@enduml