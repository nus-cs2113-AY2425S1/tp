@startuml
!include Style.puml

hide footbox
skinparam guillemet false
skinparam sequenceReferenceBackgroundColor COLOR_YELLOW
skinparam sequenceReferenceHeaderBackgroundColor COLOR_RED
skinparam ParticipantBackGroundColor COLOR_LIGHTBLUE
skinparam {
    SequenceGroupBackgroundColor COLOR_LIGHTRED
}

box Loading Saved Recipes COLOR_PALE_PINK
participant "YMFC" as YMFC <<class>>
participant ":Storage" as Storage
participant ":File" as File
participant ":Scanner" as Scanner
participant "Parser" as Parser <<class>>
participant ":AddCommand" as AddRecipeCommand
participant ":ListCommand" as ListCommand
end box

create Storage
YMFC -> Storage : Storage()
activate Storage
Storage --> YMFC : storage:Storage
deactivate Storage

YMFC -> Storage : loadRecipes(recipes, ...)
activate Storage

create File
Storage -> File : File(saveRecipePath)
activate File
File --> Storage : saveFile:File
deactivate File

create Scanner
Storage -> Scanner : Scanner(saveFile)
activate Scanner
Scanner --> Storage : reader:Scanner
deactivate Scanner

loop COLOR_GREEN until reader.hasNext() == false
    Storage -> Scanner : nextLine()
    activate Scanner
    Scanner --> Storage : line:String
    deactivate Scanner

    Storage -> Storage : addRecipe(recipes, line)
    activate Storage
    Storage -> Parser : parseRecipeSaveLine(line)
    activate Parser
    ref over Parser
        Interpret and seperate recipe's
        parameters from the save line
        and store it in a new Recipe object
    end ref

    create AddRecipeCommand
    Parser -> AddRecipeCommand : AddCommand(recipe)
    activate AddRecipeCommand
    AddRecipeCommand --> Parser : command:AddCommand
    deactivate AddRecipeCommand

    Parser --> Storage : command:AddCommand
    deactivate Parser

    Storage -> AddRecipeCommand : addLoadedRecipe(recipes)
    activate AddRecipeCommand
    ref over AddRecipeCommand
        Store loaded recipe
        into current RecipeList
    end ref
    AddRecipeCommand --> Storage
    deactivate AddRecipeCommand

    Storage --> Storage
    destroy AddRecipeCommand
    deactivate Storage

end

destroy File
destroy Scanner

Storage -> Storage : saveRecipes(recipes)
activate Storage
ref over Storage
    Refer to Save Recipes
    Sequence Diagram
end ref
Storage --> Storage
deactivate Storage


create ListCommand
Storage -> ListCommand : ListCommand()
activate ListCommand
ListCommand --> Storage : lister:ListCommand
deactivate ListCommand

Storage -> ListCommand : execute(recipes, ...)
activate ListCommand
ref over ListCommand
    Prints to the CLI
    all the loaded recipes
end ref
ListCommand --> Storage
deactivate ListCommand

Storage --> YMFC
deactivate Storage

destroy ListCommand

@enduml
