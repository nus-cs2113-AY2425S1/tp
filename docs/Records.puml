@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0
hide circle

class Records {
    -patients: ArrayList<Patient>
    -checkForCorruptedPhoneNumber(phoneNumber: String): void
    -checkForCorruptedNric(nric: String): void
    -nricIsPresentInExistingRecords(name: String, nric: String): boolean
    +Records()
    +addPatient(patient: Patient): void
    +addPatient(name: String, nric: String, visits: ArrayList<Visit>, sex: String,\n dateOfBirth: LocalDate, phoneNumber: String, homeAddress: String,\n allergies: ArrayList<String>, medicalHistories: ArrayList<String>): void
    +getPatients(): ArrayList<Patient>
    +delete(nric: String): void
    +initFile(filePath: String): void
    +autosave(filePath: String): void
    +retrieveData(filePath: String): void
}

interface FileOperation {
    +initFile(filePath: String): void
    +autosave(filePath: String): void
    +retrieveData(filePath: String): void
}

class Patient {

}

class Visit {

}

class CommandHandler {

}

class FileHandler {

}

class Main {

}

FileOperation <|.. Records : implements

Main --> Records : creates >
CommandHandler --> Records : modifies >
FileHandler --> Records : manages files >

Records "1" o-- "many" Patient
Patient "1" o-- "many" Visit


@enduml