@startuml
actor User
participant ":UI" as UI
participant ":BuffBuddy" as BB
participant ":Parser" as Parser
participant ":AddMealCommand" as AddCmd
participant ":History" as History
participant ":DailyRecord" as DailyRec
participant ":MealList" as MealList
participant ":Meal" as Meal

User -> UI: "meal add /n [mealName] /c [calories]"
activate UI
BB -> UI: readCommand()
activate BB
UI --> BB: command object
BB -> Parser: parse(command)
activate Parser

create Meal
Parser -> Meal: new Meal(mealname, calories)
activate Meal
Meal --> Parser: meal object
deactivate Meal

create AddCmd
Parser --> AddCmd: AddMealCommand(meal, date)
deactivate Parser
activate AddCmd

AddCmd -> History: getRecordByDate(date)
activate History

alt DailyRecord exists
  History --> AddCmd: DailyRecord object
else No DailyRecord exists
create DailyRec
  History -> DailyRec: new DailyRecord()
  activate DailyRec
  DailyRec --> History
  deactivate DailyRec
  History --> AddCmd
end
deactivate History

AddCmd -> DailyRec:
activate DailyRec

DailyRec -> MealList: addMealToRecord(meal)
activate MealList
MealList -> MealList: addMeal(meal)
activate MealList

deactivate MealList
MealList --> DailyRec
deactivate MealList


DailyRec --> AddCmd
deactivate DailyRec

AddCmd --> BB: CommandResult object
deactivate AddCmd

BB -> UI: Show CommandResult
deactivate BB
destroy AddCmd
destroy Meal

UI -> User: Display success message
deactivate UI
@enduml
