@startuml
actor User
participant ":UI" as UI
participant ":BuffBuddy" as BB
participant ":Parser" as Parser
participant ":AddWaterCommand" as AddCmd
participant ":History" as History
participant ":DailyRecord" as DailyRec

User -> UI: "water add /v WATER_VOLUME /t Date"
activate UI
BB -> UI: readCommand()
activate BB
UI --> BB: command object
BB -> Parser: parse(command)
activate Parser
Parser -> Parser : Parse inputs
note right
parser interactions are put under
the parser for simplification
end note
activate Parser
deactivate Parser
create AddCmd
Parser --> AddCmd: new AddWaterCommand(waterToAdd, date)
deactivate Parser

activate AddCmd

AddCmd -> History: getRecordByDate(date)
activate History

alt DailyRecord does not exist
  create DailyRec
  History -> DailyRec: new DailyRecord()
  activate DailyRec
  DailyRec --> History
  History --> AddCmd
  deactivate DailyRec
else No DailyRecord exists
  History --> AddCmd: DailyRecord object
end
deactivate History

AddCmd -> DailyRec: addWaterToRecord(waterToAdd)
activate DailyRec

DailyRec -> Water : addWater(waterVolume)
activate Water

Water --> DailyRec
deactivate Water


DailyRec --> AddCmd
deactivate DailyRec

AddCmd --> BB: CommandResult object
deactivate AddCmd
destroy AddCmd

BB -> UI: Show CommandResult
deactivate BB

UI -> User: Display success message
deactivate UI
@enduml