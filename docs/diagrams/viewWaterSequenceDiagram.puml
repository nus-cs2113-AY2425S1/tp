@startuml

actor User
participant ":UI" as UI
participant ":BuffBuddy" as BB
participant ":Parser" as Parser
participant ":ViewWaterCommand" as Cmd
participant ":History" as History
participant ":DailyRecord" as DailyRec

User -> UI: "water view /t Date"
activate UI
BB -> UI: readCommand()
activate BB
UI --> BB: command object
BB -> Parser: parse(command)
activate Parser
Parser -> Parser : Parse inputs
note right
parser interactions are put under
the parser for simplification
end note
activate Parser
deactivate Parser
create Cmd
Parser --> Cmd: new ViewWaterCommand(date)
deactivate Parser

activate Cmd

Cmd -> History: getRecordByDate(date)
activate History

alt DailyRecord does not exist
  create DailyRec
  History -> DailyRec: new DailyRecord()
  activate DailyRec
  DailyRec --> History
  History --> Cmd
  deactivate DailyRec
else No DailyRecord exists
  History --> Cmd: DailyRecord object
end
deactivate History

activate Cmd
Cmd -> DailyRecord: getWaterFromRecord(date)
activate DailyRecord

DailyRecord -> Water: getWaterList()
activate Water
Water --> DailyRecord
deactivate Water

DailyRecord --> Cmd: Water list
deactivate DailyRecord

deactivate Cmd


Cmd --> BB: CommandResult object
deactivate Cmd
destroy Cmd

BB -> UI: Show CommandResult
deactivate BB

UI -> User: Display success message
deactivate UI

@enduml