@startuml
actor User
participant ":SpendSwift" as SpendSwift
participant ":Parser" as Parser
participant ":ExpenseManager" as ExpenseManager
participant ":TrackerData" as TrackerData
participant ":SuccessMessage" as SuccessMessage

User -> SpendSwift : input("view-expenses")
SpendSwift -> Parser : parseCommand(input, trackerData)

activate Parser
Parser -> ExpenseManager : viewExpensesByCategory(trackerData)

activate ExpenseManager
ExpenseManager -> TrackerData : getExpenses()
activate TrackerData
TrackerData --> ExpenseManager : return expenses: List<Expense>
deactivate TrackerData
ExpenseManager -> TrackerData : getCategories()
activate TrackerData
TrackerData --> ExpenseManager : return categories: List<Category>
deactivate TrackerData

alt No Expenses and Categories
    ExpenseManager -> SuccessMessage : printNoExpense()
    activate SuccessMessage
    SuccessMessage --> ExpenseManager : return
    deactivate SuccessMessage
else Expenses or Categories exist
    ExpenseManager -> SuccessMessage : printExpensesByCategory(expenses, categories)

    activate SuccessMessage
    SuccessMessage -> SuccessMessage : Group expenses by category
    activate SuccessMessage
        SuccessMessage --> SuccessMessage : return
        deactivate SuccessMessage
    SuccessMessage -> SuccessMessage : Iterate through categories
    activate SuccessMessage
        SuccessMessage --> SuccessMessage : return
        deactivate SuccessMessage
    alt Category has expenses
        SuccessMessage -> SuccessMessage : Print expenses for category
        activate SuccessMessage
        SuccessMessage --> SuccessMessage : return
        deactivate SuccessMessage
    else Category has no expenses
        SuccessMessage -> SuccessMessage : Print "No expense" for category
        activate SuccessMessage
        SuccessMessage --> SuccessMessage : return
        deactivate SuccessMessage
    end
    deactivate SuccessMessage
end

    ExpenseManager --> Parser : return
    deactivate ExpenseManager

    Parser --> SpendSwift : return false
    deactivate Parser

    SpendSwift --> User : return
    deactivate SpendSwift

@enduml
