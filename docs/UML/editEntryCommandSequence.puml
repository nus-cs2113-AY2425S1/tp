@startuml

participant Logic
Logic -> Logic: editCommand(commandArguments)
activate Logic

Logic -> Logic: processIndexToAmend(commandArguments)
activate Logic
return index

Logic -> FinancialList: getEntry()
activate FinancialList
return entry

Logic -> Logic: parseAmountOrDefault(amount from input, original amount)
activate Logic
return amount

Logic -> Logic: parseDateOrDefault(date from input, original date)
activate Logic
return date

Logic -> Logic: getCategoryFromInput(commandArguments, entry)
activate Logic
return category

create EditEntryCommand
Logic -> EditEntryCommand: new EditEntryCommand(index, amount, description, date, category)
activate EditEntryCommand
return editCommand

Logic -> EditEntryCommand: execute(financialList)
activate EditEntryCommand

EditEntryCommand -> EditEntryCommand: checkValidParams()
activate EditEntryCommand
return

EditEntryCommand -> FinancialList: getEntry(index)
activate FinancialList
return entry

alt entry instanceof Expense
    Create Expense
    EditEntryCommand -> Expense: new(amount, description, date, category)
    activate Expense
    return replacementEntry
else
    Create Income
    EditEntryCommand -> Income: new(amount, description, date, category)
    activate Income
    return replacementEntry
end
EditEntryCommand -> FinancialList: deleteEntry(index)
activate FinancialList
return
EditEntryCommand -> EditEntryCommand: getRightfulInsertIndex(financialList, replacementEntry, index)
activate EditEntryCommand
return correctIndex
EditEntryCommand -> FinancialList: addEntryAtSpecificIndex(replacementEntry, correctIndex)
activate FinancialList
return
opt entry instanceof Expense
    Logic -> Logic: updateExpenseBalance(entry, amount, date)
    activate Logic
    return
end

EditEntryCommand -> AppUi: display entry edited message

EditEntryCommand --> Logic
destroy Expense
destroy Income
deactivate EditEntryCommand
destroy EditEntryCommand
return

@enduml